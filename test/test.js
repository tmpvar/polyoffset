var assert = require('assert');
var _offset = require('../offset');
var Vec2 = require('vec2');
var Canvas = require('canvas');
var canvas = new Canvas(800, 600);
var ctx = canvas.getContext('2d');
var fs = require('fs');
var segseg = require('segseg');

var drawPoint = function(point, color) {
  ctx.fillStyle = color;
  ctx.fillRect(point.x-1, point.y-1, 2, 2);
};

assert.near = function(a, b) {
  if (Math.abs(a-b) > 0.00000000001) {
    throw new Error();
  }
};

var drawPath = function(path, c, stroke, text) {
  c = c || 'green';
  ctx.strokeStyle = stroke || c;
  ctx.fillStyle = c;

  ctx.moveTo(path[0].x, path[0].y);
  ctx.beginPath();

  path.forEach(function(point) {
    ctx.lineTo(point.x, point.y);
  });

  ctx.closePath();
  ctx.fill();
  ctx.stroke();

  path.forEach(function(point, idx) {
    drawPoint(point, 'white');
    ctx.save();
      ctx.translate(point.x+10, point.y+20);
      ctx.scale(1,-1);
      text && path.length > 2 && ctx.fillText(idx, 0, 0);
    ctx.restore();
  });
};


var savePng = function(outfile, fn) {
  var stream = canvas.createJPEGStream({
    bufsize: 4096,
    quality: 100
  });

  stream.pipe(fs.createWriteStream(__dirname + '/out/' + outfile + '.jpg'))
  stream.on('end', fn);
};

var offset = function(orig, delta, auto) {


  for (var x=0; x<=700; x+=100) {
    ctx.strokeStyle = "rgba(255,255,255,.3)";
    ctx.beginPath()
    ctx.moveTo(x, 0);
    ctx.lineTo(x, 500);
    ctx.closePath();
    ctx.stroke();

    ctx.fillStyle = '#fff';
    ctx.fillText(x, x, 540);
  }

  for (var y=600; y>=0; y-=100) {
    ctx.beginPath()
    ctx.moveTo(0, 600-y);
    ctx.lineTo(700, 600-y);
    ctx.closePath();
    ctx.stroke();
    ctx.fillText(y-100, -40, 600-y);
  }
  ctx.scale(1, -1);
  ctx.translate(0, -500);

  if (delta < 0) {
    drawPath(orig, '#666', '#aaa');
  }

  var paths = _offset(orig, delta)
  assert.ok(paths.length);

  paths.forEach(function(path) {
    drawPath(path, '#2A7B24', '#0f0');
  });

  if (delta > 0) {
    drawPath(orig, '#666', '#aaa');
  }

  return paths;
};

var t = function(title, fn) {
  var fileTitle = title.replace(/ /g, '-');
  it(title, function(done) {
    ctx.fillStyle = "black";
    ctx.fillRect(0,0, 800, 600);

    ctx.save()
    ctx.translate(50, 50);
    try {
      fn();

      savePng(fileTitle, done);
    } catch (e) {
      savePng(fileTitle, function() {
        throw e;
      });
    } finally {
      ctx.restore();
    }
  });

};


describe('#offset', function() {
  t('offset square', function(fn) {
    var path = offset([
      Vec2(20, 20),
      Vec2(20, 400),
      Vec2(400, 400),
      Vec2(400, 20)
    ], 20);
  });

  t('offset square negative', function() {
    var path = offset([
      Vec2(20, 20),
      Vec2(20, 400),
      Vec2(400, 400),
      Vec2(400, 20)
    ], -20);
  });


  t('offset right triangle', function() {
    var path = offset([
      Vec2(40, 40),
      Vec2(40, 400),
      Vec2(400, 400),
    ], 20);

  });

  t('offset right triangle negative', function() {
    var path = offset([
      Vec2(40, 40),
      Vec2(40, 400),
      Vec2(400, 400),
    ], -20);
  });

  t('offset obtuse triangle negative', function() {
    var path = offset([
      Vec2(200, 170),
      Vec2(500, 40),
      Vec2(50, 40)
    ], -20);
  });

  t('offset obtuse triangle', function() {
    var path = offset([
      Vec2(200, 170),
      Vec2(500, 40),
      Vec2(50, 40)
    ], 20);
  });

  t('offset acute triangle', function() {
    var path = offset([
      Vec2(50, 50),
      Vec2(50, 200),
      Vec2(500, 125)
    ], 20);
  });

  t('offset acute triangle negative', function() {
    var path = offset([
      Vec2(50, 50),
      Vec2(50, 200),
      Vec2(500, 125)
    ], -20);
  });

  t('offset concave', function() {
    var path = offset([
      Vec2(300, 300),
      Vec2(320, 350),
      Vec2(300, 400),
      Vec2(400, 400),
      Vec2(450, 450),
      Vec2(400, 200),
      Vec2(400, 100)
    ], 20);
  });

  t('offset concave negative', function() {
    var path = offset([
      Vec2(300, 300),
      Vec2(320, 350),
      Vec2(300, 400),
      Vec2(400, 400),
      Vec2(450, 450),
      Vec2(400, 200),
      Vec2(400, 100)
    ], -20);
  });

  t('offset j', function() {
    var path = offset([
      Vec2(49.695,157.942125),
      Vec2(64.15875,149.188875),
      Vec2(64.15875,149.188875),
      Vec2(65.20075415039062,151.00175170898436),
      Vec2(66.81693008422852,153.499410736084),
      Vec2(67.99480490112305,154.95822830200194),
      Vec2(69.3050012512207,156.20520089721683),
      Vec2(70.79207528686523,157.2002020568848),
      Vec2(72.50058316040038,157.9031053161621),
      Vec2(74.47508102416991,158.2737842102051),
      Vec2(75.576,158.322),
      Vec2(75.576,158.322),
      Vec2(76.64462869262694,158.29419369506834),
      Vec2(78.62132528686523,158.0527842590332),
      Vec2(80.36906900024412,157.52151461791993),
      Vec2(81.87001364135742,156.64982744750978),
      Vec2(83.10631301879882,155.38716542358395),
      Vec2(84.0601209411621,153.68297122192385),
      Vec2(84.71359121704103,151.48668751831056),
      Vec2(85.0488776550293,148.7477569885254),
      Vec2(85.09162499999998,147.159),
      Vec2(85.09162499999998,86.769),
      Vec2(102.85274999999999,86.769),
      Vec2(102.85274999999999,147.41025),
      Vec2(102.85274999999999,147.41025),
      Vec2(102.82133684921263,149.10556217193604),
      Vec2(102.57323628616334,152.3212155075073),
      Vec2(102.08522480392455,155.30558740997313),
      Vec2(101.36584811782836,158.06109377288817),
      Vec2(100.42365194320678,160.59015048980717),
      Vec2(99.26718199539182,162.8951734542847),
      Vec2(97.90498398971557,164.97857855987547),
      Vec2(96.34560364150998,166.8427817001343),
      Vec2(94.59758666610718,168.49019876861576),
      Vec2(92.66947877883909,169.92324565887455),
      Vec2(90.56982569503784,171.14433826446538),
      Vec2(88.3071731300354,172.1558924789429),
      Vec2(85.8900667991638,172.96032419586183),
      Vec2(83.3270524177551,173.56004930877683),
      Vec2(80.62667570114135,173.9574837112427),
      Vec2(77.79748236465453,174.15504329681397),
      Vec2(76.33725,174.179625),
      Vec2(76.33725,174.179625),
      Vec2(75.02262072372436,174.1582446556091),
      Vec2(72.49675368118285,173.99040819168087),
      Vec2(70.10642249679564,173.6629291191101),
      Vec2(67.84884378433226,173.18435754776002),
      Vec2(64.70529794311523,172.2019051208496),
      Vec2(60.95255886840819,170.4429458312988),
      Vec2(57.68072872924804,168.23351852416994),
      Vec2(54.86754043579101,165.64202407836913),
      Vec2(52.49072689819336,162.73686337280276),
      Vec2(50.52802102661132,159.58643728637693),
    ].reverse().map(function(v) { return v.multiply(Vec2(5, -5)).add(Vec2(-200, 900))}), 20);
  });

  t('offset j negative', function() {
    var path = offset([
      Vec2(49.695,157.942125),
      Vec2(64.15875,149.188875),
      Vec2(64.15875,149.188875),
      Vec2(65.20075415039062,151.00175170898436),
      Vec2(66.81693008422852,153.499410736084),
      Vec2(67.99480490112305,154.95822830200194),
      Vec2(69.3050012512207,156.20520089721683),
      Vec2(70.79207528686523,157.2002020568848),
      Vec2(72.50058316040038,157.9031053161621),
      Vec2(74.47508102416991,158.2737842102051),
      Vec2(75.576,158.322),
      Vec2(75.576,158.322),
      Vec2(76.64462869262694,158.29419369506834),
      Vec2(78.62132528686523,158.0527842590332),
      Vec2(80.36906900024412,157.52151461791993),
      Vec2(81.87001364135742,156.64982744750978),
      Vec2(83.10631301879882,155.38716542358395),
      Vec2(84.0601209411621,153.68297122192385),
      Vec2(84.71359121704103,151.48668751831056),
      Vec2(85.0488776550293,148.7477569885254),
      Vec2(85.09162499999998,147.159),
      Vec2(85.09162499999998,86.769),
      Vec2(102.85274999999999,86.769),
      Vec2(102.85274999999999,147.41025),
      Vec2(102.85274999999999,147.41025),
      Vec2(102.82133684921263,149.10556217193604),
      Vec2(102.57323628616334,152.3212155075073),
      Vec2(102.08522480392455,155.30558740997313),
      Vec2(101.36584811782836,158.06109377288817),
      Vec2(100.42365194320678,160.59015048980717),
      Vec2(99.26718199539182,162.8951734542847),
      Vec2(97.90498398971557,164.97857855987547),
      Vec2(96.34560364150998,166.8427817001343),
      Vec2(94.59758666610718,168.49019876861576),
      Vec2(92.66947877883909,169.92324565887455),
      Vec2(90.56982569503784,171.14433826446538),
      Vec2(88.3071731300354,172.1558924789429),
      Vec2(85.8900667991638,172.96032419586183),
      Vec2(83.3270524177551,173.56004930877683),
      Vec2(80.62667570114135,173.9574837112427),
      Vec2(77.79748236465453,174.15504329681397),
      Vec2(76.33725,174.179625),
      Vec2(76.33725,174.179625),
      Vec2(75.02262072372436,174.1582446556091),
      Vec2(72.49675368118285,173.99040819168087),
      Vec2(70.10642249679564,173.6629291191101),
      Vec2(67.84884378433226,173.18435754776002),
      Vec2(64.70529794311523,172.2019051208496),
      Vec2(60.95255886840819,170.4429458312988),
      Vec2(57.68072872924804,168.23351852416994),
      Vec2(54.86754043579101,165.64202407836913),
      Vec2(52.49072689819336,162.73686337280276),
      Vec2(50.52802102661132,159.58643728637693),
    ].reverse().map(function(v) { return v.multiply(Vec2(5, -5)).add(Vec2(-200, 900))}), -20);
  });

  t('offset split', function() {
    var path = offset([
      Vec2(100, 100),
      Vec2(400, 100),
      Vec2(225, 200),
      Vec2(400, 400),
      Vec2(100, 400),
      Vec2(185, 200),
    ], 30);
  });

  t('offset split negative', function() {
    var path = offset([
      Vec2(100, 100),
      Vec2(400, 100),
      Vec2(225, 200),
      Vec2(400, 400),
      Vec2(100, 400),
      Vec2(185, 200),
    ], -30);
  });


  t('large island', function() {
    var path = offset([
      Vec2(0, 0),
      Vec2(280, 0),
      Vec2(200, 60),
      Vec2(100, 50),
      Vec2(120, 200),
      Vec2(300, 0),
      Vec2(300, 200),
      Vec2(300, 260),
      Vec2(200, 260),
      Vec2(0, 200),
      Vec2(40, 100),
    ].map(function(a) { return a.multiply(1.5).add(Vec2(50, 50)) }), 20);
  });

  t('large island negative', function() {
    var path = offset([
      Vec2(0, 0),
      Vec2(280, 0),
      Vec2(200, 60),
      Vec2(100, 50),
      Vec2(120, 200),
      Vec2(300, 0),
      Vec2(300, 200),
      Vec2(300, 260),
      Vec2(200, 260),
      Vec2(0, 200),
      Vec2(40, 100),
    ].map(function(a) { return a.multiply(1.5).add(Vec2(50, 50)) }), -20);
  });

  t('double arc negative', function() {
    var path = offset([
      Vec2(30,144.097),
      Vec2(30,144.097),
      Vec2(36.27800839795282,151.37495487636167),
      Vec2(42.75213328569481,158.47901875311888),
      Vec2(49.41756018931795,165.4039087031166),
      Vec2(56.26933237343874,172.14447504164),
      Vec2(63.30235452726609,178.69570515596948),
      Vec2(70.51139655372305,185.0527272330037),
      Vec2(77.89109745880103,191.21081388217632),
      Vec2(85.43596933825478,197.16538565097304),
      Vec2(93.14040145867583,202.9120144304359),
      Vec2(100.99866442990532,208.44642674811936),
      Vec2(109.0049144656881,213.76450694605276),
      Vec2(117.15319772939563,218.86230024134343),
      Vec2(125.43745476158782,223.73601566714515),
      Vec2(133.85152498612268,228.3820288918058),
      Vec2(142.38915129145892,232.79688491409624),
      Vec2(151.04398468374916,236.97730063251723),
      Vec2(159.80958900825993,240.92016728677325),
      Vec2(168.67944573560874,244.6225527695976),
      Vec2(177.6469588092601,248.08170380721023),
      Vec2(186.70545955067317,251.29504800678544),
      Vec2(195.84821161845528,254.26019576940857),
      Vec2(205.06841601783321,256.9749420670979),
      Vec2(214.35921615671532,259.4372680825703),
      Vec2(223.71370294458757,261.64534271053196),
      Vec2(233.1249199304483,263.59752391937786),
      Vec2(242.58586847596365,265.2923599722852),
      Vec2(252.08951295999518,266.72859050679665),
      Vec2(261.6287860106292,267.9051474720861),
      Vec2(271.19659376081876,268.8211559232137),
      Vec2(280.7858211237273,269.4759346717774),
      Vec2(290.38933708385326,269.8689967924778),
      Vec2(300,270.000049985219),
      Vec2(309.6106629161466,269.8689967924778),
      Vec2(319.2141788762726,269.4759346717774),
      Vec2(328.8034062391812,268.8211559232137),
      Vec2(338.3712139893707,267.9051474720861),
      Vec2(347.9104870400048,266.72859050679665),
      Vec2(357.41413152403624,265.29235997228534),
      Vec2(366.87508006955164,263.59752391937786),
      Vec2(376.28629705541243,261.64534271053196),
      Vec2(385.6407838432847,259.4372680825703),
      Vec2(394.9315839821667,256.9749420670979),
      Vec2(404.15178838154463,254.26019576940863),
      Vec2(413.2945404493268,251.29504800678544),
      Vec2(422.3530411907399,248.08170380721023),
      Vec2(431.32055426439126,244.62255276959766),
      Vec2(440.19041099174,240.92016728677325),
      Vec2(448.9560153162507,236.97730063251728),
      Vec2(457.610848708541,232.7968849140963),
      Vec2(466.1484750138774,228.3820288918058),
      Vec2(474.56254523841216,223.73601566714515),
      Vec2(482.84680227060437,218.86230024134343),
      Vec2(490.9950855343118,213.76450694605282),
      Vec2(499.0013355700946,208.44642674811942),
      Vec2(506.8595985413242,202.9120144304359),
      Vec2(514.5640306617452,197.16538565097304),
      Vec2(522.108902541199,191.21081388217632),
      Vec2(529.4886034462768,185.05272723300376),
      Vec2(536.6976454727339,178.69570515596953),
      Vec2(543.7306676265613,172.14447504164),
      Vec2(550.582439810682,165.4039087031166),
      Vec2(557.2478667143052,158.4790187531189),
      Vec2(563.7219916020471,151.37495487636176),
      Vec2(570,144.097),
      Vec2(570,455.903),
      Vec2(570,455.903),
      Vec2(563.7219916020472,448.6250451236383),
      Vec2(557.2478667143052,441.5209812468812),
      Vec2(550.582439810682,434.5960912968834),
      Vec2(543.7306676265613,427.8555249583601),
      Vec2(536.6976454727339,421.30429484403055),
      Vec2(529.4886034462769,414.9472727669963),
      Vec2(522.108902541199,408.78918611782376),
      Vec2(514.5640306617452,402.834614349027),
      Vec2(506.85959854132426,397.0879855695641),
      Vec2(499.0013355700947,391.55357325188066),
      Vec2(490.99508553431184,386.2354930539472),
      Vec2(482.8468022706044,381.1376997586566),
      Vec2(474.56254523841216,376.2639843328549),
      Vec2(466.1484750138774,371.61797110819424),
      Vec2(457.6108487085411,367.2031150859038),
      Vec2(448.95601531625084,363.0226993674828),
      Vec2(440.1904109917401,359.07983271322684),
      Vec2(431.32055426439126,355.37744723040237),
      Vec2(422.3530411907399,351.9182961927898),
      Vec2(413.29454044932686,348.7049519932146),
      Vec2(404.1517883815447,345.7398042305914),
      Vec2(394.9315839821668,343.02505793290214),
      Vec2(385.6407838432847,340.56273191742974),
      Vec2(376.28629705541243,338.35465728946804),
      Vec2(366.8750800695517,336.4024760806222),
      Vec2(357.41413152403635,334.7076400277147),
      Vec2(347.91048704000485,333.27140949320335),
      Vec2(338.37121398937074,332.09485252791393),
      Vec2(328.8034062391812,331.1788440767863),
      Vec2(319.21417887627274,330.5240653282226),
      Vec2(309.6106629161467,330.13100320752227),
      Vec2(300,329.99995001478106),
      Vec2(290.3893370838533,330.13100320752227),
      Vec2(280.7858211237273,330.5240653282226),
      Vec2(271.1965937608188,331.1788440767863),
      Vec2(261.62878601062926,332.09485252791393),
      Vec2(252.08951295999518,333.27140949320335),
      Vec2(242.5858684759638,334.7076400277147),
      Vec2(233.1249199304483,336.4024760806222),
      Vec2(223.71370294458762,338.35465728946804),
      Vec2(214.35921615671532,340.56273191742974),
      Vec2(205.06841601783321,343.02505793290214),
      Vec2(195.84821161845542,345.73980423059135),
      Vec2(186.70545955067317,348.7049519932146),
      Vec2(177.64695880926018,351.9182961927898),
      Vec2(168.67944573560874,355.3774472304024),
      Vec2(159.80958900825993,359.0798327132268),
      Vec2(151.0439846837493,363.02269936748274),
      Vec2(142.38915129145892,367.2031150859038),
      Vec2(133.85152498612268,371.61797110819424),
      Vec2(125.43745476158782,376.2639843328549),
      Vec2(117.15319772939563,381.1376997586566),
      Vec2(109.00491446568824,386.2354930539472),
      Vec2(100.99866442990532,391.55357325188066),
      Vec2(93.14040145867583,397.0879855695641),
      Vec2(85.43596933825478,402.834614349027),
      Vec2(77.89109745880103,408.7891861178237),
      Vec2(70.51139655372316,414.94727276699626),
      Vec2(63.30235452726609,421.30429484403055),
      Vec2(56.26933237343874,427.85552495836004),
      Vec2(49.41756018931795,434.5960912968834),
      Vec2(42.75213328569481,441.52098124688115),
      Vec2(36.27800839795293,448.62504512363824),
      Vec2(30,455.903),
      Vec2(30,144.097),
    ], -20);
  });

  t('double arc', function() {
    var path = offset([
      Vec2(30,144.097),
      Vec2(30,144.097),
      Vec2(36.27800839795282,151.37495487636167),
      Vec2(42.75213328569481,158.47901875311888),
      Vec2(49.41756018931795,165.4039087031166),
      Vec2(56.26933237343874,172.14447504164),
      Vec2(63.30235452726609,178.69570515596948),
      Vec2(70.51139655372305,185.0527272330037),
      Vec2(77.89109745880103,191.21081388217632),
      Vec2(85.43596933825478,197.16538565097304),
      Vec2(93.14040145867583,202.9120144304359),
      Vec2(100.99866442990532,208.44642674811936),
      Vec2(109.0049144656881,213.76450694605276),
      Vec2(117.15319772939563,218.86230024134343),
      Vec2(125.43745476158782,223.73601566714515),
      Vec2(133.85152498612268,228.3820288918058),
      Vec2(142.38915129145892,232.79688491409624),
      Vec2(151.04398468374916,236.97730063251723),
      Vec2(159.80958900825993,240.92016728677325),
      Vec2(168.67944573560874,244.6225527695976),
      Vec2(177.6469588092601,248.08170380721023),
      Vec2(186.70545955067317,251.29504800678544),
      Vec2(195.84821161845528,254.26019576940857),
      Vec2(205.06841601783321,256.9749420670979),
      Vec2(214.35921615671532,259.4372680825703),
      Vec2(223.71370294458757,261.64534271053196),
      Vec2(233.1249199304483,263.59752391937786),
      Vec2(242.58586847596365,265.2923599722852),
      Vec2(252.08951295999518,266.72859050679665),
      Vec2(261.6287860106292,267.9051474720861),
      Vec2(271.19659376081876,268.8211559232137),
      Vec2(280.7858211237273,269.4759346717774),
      Vec2(290.38933708385326,269.8689967924778),
      Vec2(300,270.000049985219),
      Vec2(309.6106629161466,269.8689967924778),
      Vec2(319.2141788762726,269.4759346717774),
      Vec2(328.8034062391812,268.8211559232137),
      Vec2(338.3712139893707,267.9051474720861),
      Vec2(347.9104870400048,266.72859050679665),
      Vec2(357.41413152403624,265.29235997228534),
      Vec2(366.87508006955164,263.59752391937786),
      Vec2(376.28629705541243,261.64534271053196),
      Vec2(385.6407838432847,259.4372680825703),
      Vec2(394.9315839821667,256.9749420670979),
      Vec2(404.15178838154463,254.26019576940863),
      Vec2(413.2945404493268,251.29504800678544),
      Vec2(422.3530411907399,248.08170380721023),
      Vec2(431.32055426439126,244.62255276959766),
      Vec2(440.19041099174,240.92016728677325),
      Vec2(448.9560153162507,236.97730063251728),
      Vec2(457.610848708541,232.7968849140963),
      Vec2(466.1484750138774,228.3820288918058),
      Vec2(474.56254523841216,223.73601566714515),
      Vec2(482.84680227060437,218.86230024134343),
      Vec2(490.9950855343118,213.76450694605282),
      Vec2(499.0013355700946,208.44642674811942),
      Vec2(506.8595985413242,202.9120144304359),
      Vec2(514.5640306617452,197.16538565097304),
      Vec2(522.108902541199,191.21081388217632),
      Vec2(529.4886034462768,185.05272723300376),
      Vec2(536.6976454727339,178.69570515596953),
      Vec2(543.7306676265613,172.14447504164),
      Vec2(550.582439810682,165.4039087031166),
      Vec2(557.2478667143052,158.4790187531189),
      Vec2(563.7219916020471,151.37495487636176),
      Vec2(570,144.097),
      Vec2(570,455.903),
      Vec2(570,455.903),
      Vec2(563.7219916020472,448.6250451236383),
      Vec2(557.2478667143052,441.5209812468812),
      Vec2(550.582439810682,434.5960912968834),
      Vec2(543.7306676265613,427.8555249583601),
      Vec2(536.6976454727339,421.30429484403055),
      Vec2(529.4886034462769,414.9472727669963),
      Vec2(522.108902541199,408.78918611782376),
      Vec2(514.5640306617452,402.834614349027),
      Vec2(506.85959854132426,397.0879855695641),
      Vec2(499.0013355700947,391.55357325188066),
      Vec2(490.99508553431184,386.2354930539472),
      Vec2(482.8468022706044,381.1376997586566),
      Vec2(474.56254523841216,376.2639843328549),
      Vec2(466.1484750138774,371.61797110819424),
      Vec2(457.6108487085411,367.2031150859038),
      Vec2(448.95601531625084,363.0226993674828),
      Vec2(440.1904109917401,359.07983271322684),
      Vec2(431.32055426439126,355.37744723040237),
      Vec2(422.3530411907399,351.9182961927898),
      Vec2(413.29454044932686,348.7049519932146),
      Vec2(404.1517883815447,345.7398042305914),
      Vec2(394.9315839821668,343.02505793290214),
      Vec2(385.6407838432847,340.56273191742974),
      Vec2(376.28629705541243,338.35465728946804),
      Vec2(366.8750800695517,336.4024760806222),
      Vec2(357.41413152403635,334.7076400277147),
      Vec2(347.91048704000485,333.27140949320335),
      Vec2(338.37121398937074,332.09485252791393),
      Vec2(328.8034062391812,331.1788440767863),
      Vec2(319.21417887627274,330.5240653282226),
      Vec2(309.6106629161467,330.13100320752227),
      Vec2(300,329.99995001478106),
      Vec2(290.3893370838533,330.13100320752227),
      Vec2(280.7858211237273,330.5240653282226),
      Vec2(271.1965937608188,331.1788440767863),
      Vec2(261.62878601062926,332.09485252791393),
      Vec2(252.08951295999518,333.27140949320335),
      Vec2(242.5858684759638,334.7076400277147),
      Vec2(233.1249199304483,336.4024760806222),
      Vec2(223.71370294458762,338.35465728946804),
      Vec2(214.35921615671532,340.56273191742974),
      Vec2(205.06841601783321,343.02505793290214),
      Vec2(195.84821161845542,345.73980423059135),
      Vec2(186.70545955067317,348.7049519932146),
      Vec2(177.64695880926018,351.9182961927898),
      Vec2(168.67944573560874,355.3774472304024),
      Vec2(159.80958900825993,359.0798327132268),
      Vec2(151.0439846837493,363.02269936748274),
      Vec2(142.38915129145892,367.2031150859038),
      Vec2(133.85152498612268,371.61797110819424),
      Vec2(125.43745476158782,376.2639843328549),
      Vec2(117.15319772939563,381.1376997586566),
      Vec2(109.00491446568824,386.2354930539472),
      Vec2(100.99866442990532,391.55357325188066),
      Vec2(93.14040145867583,397.0879855695641),
      Vec2(85.43596933825478,402.834614349027),
      Vec2(77.89109745880103,408.7891861178237),
      Vec2(70.51139655372316,414.94727276699626),
      Vec2(63.30235452726609,421.30429484403055),
      Vec2(56.26933237343874,427.85552495836004),
      Vec2(49.41756018931795,434.5960912968834),
      Vec2(42.75213328569481,441.52098124688115),
      Vec2(36.27800839795293,448.62504512363824),
      Vec2(30,455.903),
      Vec2(30,144.097),
    ], 20);
  });
});
